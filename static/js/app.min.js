!function(){"use strict";angular.module("project-staffing",["ngRoute","ngAutocomplete","employee-directives"])}(),function(){"use strict";angular.module("project-staffing").controller("AddressController",["$http","$scope",function(e,t){t.result="",t.details={},t.options={},t.form={type:"geocode",watchEnter:!0},this.saveAddress=function(o){console.log("update existing employee"),console.log(t.details),o.homeaddress=t.details.geometry.location,e.post("http://localhost:9000/api/mongo/employees/"+o._id,JSON.stringify(o))}}])}(),function(){"use strict";angular.module("project-staffing").controller("EmployeeController",["$http",function(e){var t=this;this.tab=1,this.employees=t.employees,this.employee={},t.employees=[],e.get("http://localhost:9000/api/mongo/employees").success(function(e){console.log("Get all employees from backend"),t.employees=e}),this.showTabs=function(){return console.log("show tabs"),void 0===this.employee._id?!1:!0},this.editEmployee=function(e){for(var t in this.employees)this.employees[t]._id===e&&(console.log("Edit Employee"),this.employee=this.employees[t])},this.resetForm=function(){this.employee={}},this.addEmployee=function(){void 0===this.employee._id?(console.log("add new employee"),e.post("http://localhost:9000/api/mongo/employees",JSON.stringify(this.employee))):(console.log("update existing employee"),e.post("http://localhost:9000/api/mongo/employees/"+this.employee._id,JSON.stringify(this.employee))),e.get("http://localhost:9000/api/mongo/employees").success(function(e){console.log("Update all employees from backend"),t.employees=e}),this.employee={}},this.deleteEmployee=function(t){console.log("Delete employee with id: "+JSON.stringify(t)),e.delete("http://localhost:9000/api/mongo/employees/"+t);for(var o in this.employees)console.log(this.employees[o]),console.log(o),this.employees[o]._id===t&&(console.log("Delete item from array"),this.employees.splice(o,1))}}])}(),function(){"use strict";angular.module("project-staffing").controller("NavigationController",["$scope",function(e){e.active="",e.set=function(t){e.active=t}}])}(),function(){"use strict";angular.module("project-staffing").controller("ProjectController",["$http",function(e){this.deleteProject=function(t,o){console.log("delete project "+t),console.log(o.projects[t]),o.projects.splice(t,1),e.post("http://localhost:9000/api/mongo/employees/"+o._id+"/projects",JSON.stringify(o))},this.addProject=function(t){console.log(t),null==t.projects&&(t.projects=[]),t.projects.push(this.project),e.post("http://localhost:9000/api/mongo/employees/"+t._id+"/projects",JSON.stringify(t)),this.project={}}}])}(),function(){"use strict";angular.module("project-staffing").controller("SkillController",["$http",function(e){this.skill="",this.deleteSkill=function(t,o){console.log("delete skill "+t),console.log(o.skills[t]),o.skills.splice(t,1),e.post("http://localhost:9000/api/mongo/employees/"+o._id+"/skills",JSON.stringify(o))},this.addSkill=function(t){for(var o in t.skills)if(o===this.skill)return;null==t.skills&&(t.skills=[]),t.skills.push(this.skill),e.post("http://localhost:9000/api/mongo/employees/"+t._id+"/skills",JSON.stringify(t)),this.skill=""}}])}(),function(){"use strict";var e=angular.module("employee-directives",[]);e.directive("navigation",function(){return{restrict:"E",templateUrl:"navigation.html"}}),e.directive("employeeTable",function(){return{restrict:"E",templateUrl:"employee-table.html"}}),e.directive("employeeForm",function(){return{restrict:"E",templateUrl:"employee-form.html"}}),e.directive("skillForm",function(){return{restrict:"E",templateUrl:"skill-form.html"}}),e.directive("projectForm",function(){return{restrict:"E",templateUrl:"project-form.html"}}),e.directive("homeaddressForm",function(){return{restrict:"E",templateUrl:"homeaddress-form.html"}})}(),function(){"use strict";angular.module("project-staffing").config(["$routeProvider",function(e){e.when("/",{templateUrl:"views/index.html"}).when("/dashboard",{templateUrl:"views/dashboard.html"}).when("/list-employees",{templateUrl:"views/list_employees.html",controller:"EmployeeController",controllerAs:"employeeCtrl"}).when("/add-employee",{templateUrl:"views/add_employee.html",controller:"EmployeeController",controllerAs:"employeeCtrl"}).when("/list-customers",{templateUrl:"views/list_customers.html"}).when("/add-customer",{templateUrl:"views/add_customer.html"}).when("/duesseldorf",{templateUrl:"views/duesseldorf.html"}).when("/help",{templateUrl:"views/help.html"}).otherwise({redirectTo:"/"})}])}();